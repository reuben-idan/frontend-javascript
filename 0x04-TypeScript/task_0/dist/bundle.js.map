{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://task_0/./js/main.ts"],"sourcesContent":["// Student interface definition\r\ninterface Student {\r\n  firstName: string;\r\n  lastName: string;\r\n  age: number;\r\n  location: string;\r\n}\r\n\r\n// Create two student objects\r\nconst student1: Student = {\r\n  firstName: \"John\",\r\n  lastName: \"Doe\",\r\n  age: 20,\r\n  location: \"New York\",\r\n};\r\n\r\nconst student2: Student = {\r\n  firstName: \"Jane\",\r\n  lastName: \"Smith\",\r\n  age: 22,\r\n  location: \"Los Angeles\",\r\n};\r\n\r\n// Create array containing the two students\r\nconst studentsList: Student[] = [student1, student2];\r\n\r\n// Function to render the table\r\nfunction renderTable(): void {\r\n  // Create table element\r\n  const table: HTMLTableElement = document.createElement(\"table\");\r\n  table.style.borderCollapse = \"collapse\";\r\n  table.style.width = \"100%\";\r\n  table.style.maxWidth = \"600px\";\r\n  table.style.margin = \"20px auto\";\r\n  table.style.border = \"1px solid #ddd\";\r\n\r\n  // Create table header\r\n  const thead: HTMLTableSectionElement = document.createElement(\"thead\");\r\n  const headerRow: HTMLTableRowElement = document.createElement(\"tr\");\r\n\r\n  const firstNameHeader: HTMLTableCellElement = document.createElement(\"th\");\r\n  firstNameHeader.textContent = \"First Name\";\r\n  firstNameHeader.style.padding = \"12px\";\r\n  firstNameHeader.style.textAlign = \"left\";\r\n  firstNameHeader.style.backgroundColor = \"#f2f2f2\";\r\n  firstNameHeader.style.border = \"1px solid #ddd\";\r\n\r\n  const locationHeader: HTMLTableCellElement = document.createElement(\"th\");\r\n  locationHeader.textContent = \"Location\";\r\n  locationHeader.style.padding = \"12px\";\r\n  locationHeader.style.textAlign = \"left\";\r\n  locationHeader.style.backgroundColor = \"#f2f2f2\";\r\n  locationHeader.style.border = \"1px solid #ddd\";\r\n\r\n  headerRow.appendChild(firstNameHeader);\r\n  headerRow.appendChild(locationHeader);\r\n  thead.appendChild(headerRow);\r\n  table.appendChild(thead);\r\n\r\n  // Create table body\r\n  const tbody: HTMLTableSectionElement = document.createElement(\"tbody\");\r\n\r\n  // Iterate through students and create rows\r\n  studentsList.forEach((student: Student) => {\r\n    const row: HTMLTableRowElement = document.createElement(\"tr\");\r\n\r\n    const firstNameCell: HTMLTableCellElement = document.createElement(\"td\");\r\n    firstNameCell.textContent = student.firstName;\r\n    firstNameCell.style.padding = \"12px\";\r\n    firstNameCell.style.border = \"1px solid #ddd\";\r\n\r\n    const locationCell: HTMLTableCellElement = document.createElement(\"td\");\r\n    locationCell.textContent = student.location;\r\n    locationCell.style.padding = \"12px\";\r\n    locationCell.style.border = \"1px solid #ddd\";\r\n\r\n    row.appendChild(firstNameCell);\r\n    row.appendChild(locationCell);\r\n    tbody.appendChild(row);\r\n  });\r\n\r\n  table.appendChild(tbody);\r\n\r\n  // Append table to document body\r\n  document.body.appendChild(table);\r\n}\r\n\r\n// Call the render function when DOM is loaded\r\ndocument.addEventListener(\"DOMContentLoaded\", renderTable);\r\n"],"names":[],"sourceRoot":""}